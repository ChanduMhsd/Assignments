# 1. Write a recursive python function to calculate sum of first N natural numbers
def sum_first_n_natural_numbers(n):
    if n == 1:
        return 1
    else:
        return n + sum_first_n_natural_numbers(n - 1)

# 2. Write a recursive python function to calculate sum of first N odd natural numbers
def sum_first_n_odd_numbers(n):
    if n == 1:
        return 1
    else:
        return (2 * n - 1) + sum_first_n_odd_numbers(n - 1)

# 3. Write a recursive python function to calculate sum of first N even natural numbers
def sum_first_n_even_numbers(n):
    if n == 1:
        return 2
    else:
        return 2 * n + sum_first_n_even_numbers(n - 1)

# 4. Write a recursive python function to calculate sum of squares of first N natural numbers
def sum_of_squares_first_n_numbers(n):
    if n == 1:
        return 1
    else:
        return n**2 + sum_of_squares_first_n_numbers(n - 1)

# 5. Write a recursive python function to calculate sum of cubes of first N natural numbers
def sum_of_cubes_first_n_numbers(n):
    if n == 1:
        return 1
    else:
        return n**3 + sum_of_cubes_first_n_numbers(n - 1)

# 6. Write a recursive python function to calculate the factorial of a number.
def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)

# 7. Write a recursive python function to calculate sum of the digits of a given number
def sum_of_digits(number):
    if number == 0:
        return 0
    else:
        return number % 10 + sum_of_digits(number // 10)

# 8. Write a recursive python function to print binary of a given decimal number.
def decimal_to_binary(n):
    if n == 0:
        return ''
    else:
        return decimal_to_binary(n // 2) + str(n % 2)

# 9. Write a recursive python function to print octal of a given decimal number
def decimal_to_octal(n):
    if n == 0:
        return ''
    else:
        return decimal_to_octal(n // 8) + str(n % 8)

# 10. Write a recursive python function to find the Nth term of the Fibonacci series.
def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)
